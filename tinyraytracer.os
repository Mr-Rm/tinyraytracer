Перем π;
Перем МАКС_ЧИСЛО;
Перем ГЛУБИНА_РЕКУРСИИ;

Перем НулевойВектор;
Перем ЕдиничныйВектор;
Перем ЕдиничныйВекторX;
Перем ЕдиничныйВекторY;
Перем ЕдиничныйВекторZ;

Перем ЦветФона;
Перем ЦветБелый, ЦветЖелтый;
Перем ПлиткаБелая, ПлиткаЖелтая;

Перем Сферы, Освещение;
Перем Ширина, Высота, УголЗрения;
Перем Кадр;

// ------------------

#Область Вектор

Функция Новый_Вектор(знач x=0, знач y=0, знач z=0)
	возврат Новый Структура("x,y,z", x, y, z);
КонецФункции	

Функция Вектор_Печать( В1 )
	сообщить("("+В1.x+","+В1.y+","+В1.z+")");
КонецФункции	

Функция Вектор_Минус( В1 )
	возврат Новый_Вектор( -В1.x, -В1.y, -В1.z );
КонецФункции	

Функция Вектор_Сумма( В1, В2 )
	возврат Новый_Вектор( В1.x+В2.x, В1.y+В2.y, в1.z+В2.z );
КонецФункции	

Функция Вектор_Разность( В1, В2 )
	возврат Новый_Вектор( В1.x-В2.x, В1.y-В2.y, В1.z-В2.z );
КонецФункции	

Функция Вектор_Умножить( В1, ч )
	возврат Новый_Вектор( В1.x*ч, В1.y*ч, В1.z*ч );
КонецФункции	

Функция Вектор_СкалярноеПр( В1, В2 )
	возврат В1.x*В2.x + В1.y*В2.y + В1.z*В2.z;
КонецФункции	

Функция Вектор_Норма( В1 )
	возврат Sqrt( В1.x*В1.x+В1.y*В1.y+В1.z*В1.z );
КонецФункции

Функция Вектор_КвНормы( В1 )
	возврат В1.x*В1.x+В1.y*В1.y+В1.z*В1.z;
КонецФункции

Функция Вектор_Нормализация( В1 )
	норма=Вектор_Норма( В1 );
	В1.x = В1.x/норма;
	В1.y = В1.y/норма;
	В1.z = В1.z/норма;
	возврат В1;
КонецФункции

#КонецОбласти

Функция Abs(знач ч)
	возврат ?(ч<0,-ч,ч);
КонецФункции	

Функция Норм_Цвет(знач цв)
	возврат Цел(255*Макс(0, Мин(1,цв)));
КонецФункции	

Функция Новая_Сфера( ц, р, мат )
	возврат Новый ФиксированнаяСтруктура("Центр,Радиус, Материал", ц, р, мат );
КонецФункции

Функция Новый_Свет( поз, ярк )
	возврат Новый ФиксированнаяСтруктура("Поз, Ярк", поз, ярк );
КонецФункции

Функция Новый_Материал( Цв, Ал0,Ал1,Ал2,Ал3, Отр, Пр )
	возврат Новый ФиксированнаяСтруктура("Цвет, Альб0,Альб1,Альб2,Альб3, ЭкспОтраж,КПрелом", Цв, Ал0,Ал1,Ал2,Ал3, Отр,Пр );
КонецФункции

// ------------------

Функция Сфера_Пересечение(Сф,Исх,Напр, Расст)
	
	КЦентру = Вектор_Разность( Сф.Центр, Исх );
	пр = Вектор_СкалярноеПр( КЦентру, Напр );
	д2 = Вектор_КвНормы( КЦентру ) - пр*пр;
	р2 = Сф.Радиус*Сф.Радиус; 
	если д2 > р2 тогда
		возврат Ложь;
	КонецЕсли;
	
	р = Sqrt( р2 - д2 ); 
	Расст = пр - р;
	
	если Расст < 0 тогда
		Расст = пр + р;
		если Расст < 0 тогда
			возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	возврат Истина;
	
КонецФункции	

Функция НайтиПересечения( Исх,Напр, Точка,Нормаль,Материал  )
	Перем Расст;
	МинРасст = МАКС_ЧИСЛО;
	Для Каждого Сф из Сферы Цикл
		если (Сфера_Пересечение( Сф,Исх,Напр, Расст )) и (Расст < МинРасст) тогда
			МинРасст = Расст;
			Точка = Вектор_Сумма( Исх, Вектор_Умножить( Напр, Расст ) );
			Нормаль = Вектор_Нормализация( Вектор_Разность( Точка, Сф.Центр ) );
			Материал = Сф.Материал;
		конецесли;	
	КонецЦикла;
	
   // квадрат (-10,-10,-4) - (10,-30,-4)
	Если Напр.y < -0.001 Тогда
		р = -(Исх.y+4)/Напр.y;
		Если 0<р и р<МинРасст Тогда
			Т = Вектор_Умножить(Напр,р);
			Т = Вектор_Сумма(Т,Исх);
			Если Abs(Т.x)<10 и -30<Т.z и Т.z<-10 Тогда
				МинРасст = р;
				Точка = Т;
				Нормаль = ЕдиничныйВекторY;
				Материал = ?( (Цел(0.5*Точка.x+1000)+Цел(0.5*Точка.z))%2=1, ПлиткаБелая, ПлиткаЖелтая );
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	возврат МинРасст < 1000;
КонецФункции

// return I - N*2.f*(I*N);
Функция Отражение( Луч, Норм )
	возврат Вектор_Разность( Луч, Вектор_Умножить( Норм, 2*Вектор_СкалярноеПр(Луч, Норм) ) );
КонецФункции

Функция Преломление( Луч, Норм, КоэфПр )
	Если КоэфПр=1 Тогда 
 		Возврат Луч;
	КонецЕсли;  

  	CosI = -Макс( -1, Мин( 1, Вектор_СкалярноеПр(Луч, Норм)));
  	Если CosI>=0 Тогда
		η = 1/КоэфПр;
  		Н = Норм;
	Иначе
		CosI = -CosI;
		η = КоэфПр;
  		Н = Вектор_Минус(Норм);
	КонецЕсли;	
	К = 1 - η*η*(1-CosI*CosI);
	Если К<0 Тогда
		возврат ЕдиничныйВекторX;
	КонецЕсли;
	
	возврат Вектор_Сумма( Вектор_Умножить(Луч,η), Вектор_Умножить(Н,η*CosI-Sqrt(К)) );
КонецФункции

Функция ТрассироватьЛуч( Исх, Напр, Глубина=0 )
	Перем Точка;
	Перем Нормаль;
	Перем Материал;
	
	Перем ТеньТочка;
	Перем ТеньНормаль;
	Перем ВремМатериал;

	если Глубина>ГЛУБИНА_РЕКУРСИИ или НЕ НайтиПересечения( Исх,Напр, Точка,Нормаль,Материал ) тогда
		возврат ЦветФона;
	конецесли;	

	СдвигПоНормали = Вектор_Умножить( Нормаль, 0.001 );
	
	ОтражНапр = Отражение(Напр,Нормаль); // нормализовано
	ОтражИсх = ?( Вектор_СкалярноеПр(ОтражНапр, Нормаль)<0, Вектор_Разность(Точка,СдвигПоНормали), Вектор_Сумма(Точка,СдвигПоНормали) );
	ОтражЦвет = ТрассироватьЛуч( ОтражИсх, ОтражНапр, Глубина+1 );

	ПреломНапр = Вектор_Нормализация(Преломление(Напр,Нормаль,Материал.КПрелом));
	ПреломИсх = ?( Вектор_СкалярноеПр(ПреломНапр, Нормаль)<0, Вектор_Разность(Точка,СдвигПоНормали), Вектор_Сумма(Точка,СдвигПоНормали) );
	ПреломЦвет = ТрассироватьЛуч( ПреломИсх, ПреломНапр, Глубина+1 );

	Яркость = 0;
	Блик = 0;
	Для Каждого Свет из Освещение цикл
		НапрКСвету = Вектор_Нормализация(Вектор_Разность(Свет.Поз, Точка));
		
		РасстДоСвета = Вектор_КвНормы(Вектор_Разность(Свет.Поз, Точка));
		ТеньИсх = ?( Вектор_СкалярноеПр(НапрКСвету, Нормаль)<0, Вектор_Разность(Точка,СдвигПоНормали), Вектор_Сумма(Точка,СдвигПоНормали) );
		
		если НайтиПересечения( ТеньИсх,НапрКСвету, ТеньТочка,ТеньНормаль,ВремМатериал ) 
			 и Вектор_КвНормы(Вектор_Разность(ТеньТочка, ТеньИсх))<РасстДоСвета  тогда
			Продолжить;
		конецесли;	
		
		Яркость = Яркость + Свет.Ярк * Макс( 0, Вектор_СкалярноеПр( НапрКСвету, Нормаль ));

		//powf(std::max(0.f, -reflect(-light_dir, N)*dir), material.specular_exponent)*lights[i].intensity;
		Блик = Блик + Свет.Ярк * Pow(Макс(0, Вектор_СкалярноеПр(Отражение(НапрКСвету, Нормаль),Напр) ), Материал.ЭкспОтраж);
	КонецЦикла;
	
	возврат Вектор_Сумма(Вектор_Сумма(Вектор_Сумма( 
	          Вектор_Умножить( Материал.Цвет, Яркость*Материал.Альб0 ) 
	         ,Вектор_Умножить( ЕдиничныйВектор, Блик*Материал.Альб1 )
	        ),Вектор_Умножить( ОтражЦвет, Материал.Альб2 )
			),Вектор_Умножить( ПреломЦвет, Материал.Альб3 )		        
	        );
КонецФункции

Процедура Рендер()
	
	Камера = Новый_Вектор(0,0,0);
	Напр_Z =-Высота/(2*Tan(УголЗрения/2));
	Для верт=0 по Высота-1 Цикл
		линия = верт*Ширина;
		Напр_Y = -(верт+0.5)+Высота/2;
		Для гор=0 по Ширина-1 Цикл
 			Напр_X = (гор+0.5)-Ширина/2;
			Направление = Вектор_Нормализация( Новый_Вектор(Напр_X,Напр_Y,Напр_Z) );
			Кадр[линия+гор] = ТрассироватьЛуч( Камера, Направление );
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура СохранитьКадр( ИмяФайла )
	файл=Новый ТекстовыйДокумент;

	файл.ДобавитьСтроку("P3");
	файл.ДобавитьСтроку(""+Ширина+" "+Высота);
	файл.ДобавитьСтроку("255");
	
	Для п=0 по Высота*Ширина-1 Цикл
		Пиксел = Кадр[п];
		МаксИнт = Макс( Пиксел.x, Макс(Пиксел.y,Пиксел.z) );
		Если МаксИнт>1 Тогда
			МаксИнт = 1/МаксИнт; 
			Пиксел.x = Пиксел.x * МаксИнт;
			Пиксел.y = Пиксел.y * МаксИнт;
			Пиксел.z = Пиксел.z * МаксИнт;
		КонецЕсли;
		файл.ДобавитьСтроку( ""+Норм_Цвет(Пиксел.x)+" "+Норм_Цвет(Пиксел.y)+" "+Норм_Цвет(Пиксел.z) ); 
	КонецЦикла;

	файл.Записать(ИмяФайла,КодировкаТекста.ANSI);
КонецПроцедуры

π = 3.14159265359;
МАКС_ЧИСЛО = 999999999999999;
ГЛУБИНА_РЕКУРСИИ = 4;

НулевойВектор=Новый_Вектор(0, 0, 0);
ЕдиничныйВектор=Новый_Вектор(1, 1, 1);
ЕдиничныйВекторX=Новый_Вектор(1, 0, 0);
ЕдиничныйВекторY=Новый_Вектор(0, 1, 0);
ЕдиничныйВекторZ=Новый_Вектор(0, 0, 1);

ЦветБелый=ЕдиничныйВектор;
ЦветЖелтый=Новый_Вектор(1, 0.7, 0.3);

Ширина=1024;
Высота=768;
УголЗрения = π/3;
Кадр=Новый Массив(Ширина*Высота);

ЦветФона=Новый_Вектор(0.2, 0.7, 0.8);

Серый =   Новый_Материал( Новый_Вектор( 0.4, 0.4, 0.3 ), 0.6, 0.3,0.1,0,    50,1 );
Стекло =  Новый_Материал( Новый_Вектор( 0.6, 0.7, 0.8 ), 0,   0.5,0.1,0.8, 125,1.5 );
Красный = Новый_Материал( Новый_Вектор( 0.3, 0.1, 0.1 ), 0.9, 0.1,0.0,0,    10,1 );
Зеркало = Новый_Материал( Новый_Вектор( 1.0, 1.0, 1.0 ), 0,  10.0,0.8,0,  1425,1 );

ПлиткаБелая =  Новый_Материал( Вектор_Умножить(ЦветБелый,0.3),  1,0,0,0, 0,1 );
ПлиткаЖелтая = Новый_Материал( Вектор_Умножить(ЦветЖелтый,0.3), 1,0,0,0, 0,1 );

Сферы=Новый Массив;
Сферы.Добавить(Новая_Сфера(Новый_Вектор(-3,   0,  -16), 2, Серый ));
Сферы.Добавить(Новая_Сфера(Новый_Вектор(-1.0,-1.5,-12), 2, Стекло ));
Сферы.Добавить(Новая_Сфера(Новый_Вектор( 1.5,-0.5,-18), 3, Красный ));
Сферы.Добавить(Новая_Сфера(Новый_Вектор( 7,   5,  -18), 4, Зеркало ));

Освещение=Новый Массив;
Освещение.Добавить(Новый_Свет(Новый_Вектор(-20, 20,  20), 1.5) );
Освещение.Добавить(Новый_Свет(Новый_Вектор( 30, 50, -25), 1.8) );
Освещение.Добавить(Новый_Свет(Новый_Вектор( 30, 20,  30), 1.7) );

т0=ТекущаяУниверсальнаяДатаВМиллисекундах();
Рендер();
т1=ТекущаяУниверсальнаяДатаВМиллисекундах();
//сообщить("~"+ Цел(т1-т0) );

СохранитьКадр(КаталогВременныхФайлов()+"out.ppm");
